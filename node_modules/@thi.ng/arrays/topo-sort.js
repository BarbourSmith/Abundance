import { illegalState } from "@thi.ng/errors";
const topoSort = (nodes, deps) => {
  const cycles = {};
  const topology = [];
  const sort = (id, path) => {
    if (cycles[id]) illegalState(`dependency cycle: ${path.join(" -> ")}`);
    cycles[id] = true;
    const nodeDeps = deps(nodes[id]);
    if (nodeDeps) {
      for (let d of nodeDeps) sort(d, [...path, d]);
    }
    cycles[id] = false;
    if (!topology.includes(id)) topology.push(id);
  };
  for (let id in nodes) sort(id, [id]);
  return topology;
};
export {
  topoSort
};
